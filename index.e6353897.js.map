{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js-components/news-service.js","<<jsx-config-pragma.js>>","src/js-components/load-more-btn.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const API_KEY = '32070440-da23fcdb10bb13069c595106c' // виносимо ключ в змінну\n\nexport default class NewsApiService { // створюємо окремий класс для роботи з АРІ\n\n    constructor() {\n        this.searchQuery = ''; // оголошуємо глобальну змінну в конструкторі для подальшого перезапису через метод get та set\n        this.page = 1; // вводимо параметер номера сторінки для можливості догрузки \n        \n    }\n    fetchHits(searchQuery) {  // формуємо єдиний метод який буде відповідати за HTTP запити\n        console.log(this);\n        const url = `https://pixabay.com/api/?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&lang=en&orientation=horizontal&safesearch=true&page=${this.page}&per_page=40`\n    \n    return fetch(url)  //забираємо проміс даних по лінку API\n        .then(respense => respense.json()) //парсимо дані в текстовий формат json\n        .then(({ hits }) => {    \n            this.incrementPage(); // догружаємо сторінки з даними при кожному кліку на load more(метод описаний нижче)\n            return hits; // повертаємо у зовнішній код проміс значення об'єкту даних\n        })     \n    } \n\nincrementPage() { // прописуємо метод збільшення номеру сторінки до наступної при кліку на load more\n    this.page += 1;\n}\n\nresetPage() { // прописуємо метод скидання номеру сторінки до 1-ї при новому пошуку\n    this.page = 1;\n}\n\nget query() { //  прописуємо в конструктор медот для отримання змінної \n    return this.searchQuery;\n    }\nset query(newQuery) { //  прописуємо в конструктор медот для перезапису змінної \n    this.searchQuery = newQuery;    \n}\n}\n\n",null,"export default class LoadMoreBtn {\n    constructor({ selector, hidden = false }) {\n        this.refs = this.getRefs(selector); // задаємо в this.refs посилання на змінні в кнопці\n\n        hidden && this.hide(); // виконуємо якщо на кнопці встановлено початкове правило hidden=true тоді ховаємо її методом hide(нижче)\n    }\n\n\ngetRefs(selector) {\n    const refs = {};\n    refs.button = document.querySelector(selector); // посилання на кнопку\n    refs.label = refs.button.querySelector('.label'); // посилання на label\n    refs.spinner = refs.button.querySelector('.spinner'); // посилання на spin\n\n    return refs;\n    }\n \n\nenable() { // стан кнопки на очікування кліку для завандаження даних (задаємо в парі з методами show/hide)\n    this.refs.button.disabled = false; // робимо кнопку активною\n    this.refs.label.textContent = 'Load more'; // підставляємо на кнопку слово Load more\n    this.refs.spinner.classList.add('is-hidden'); // деактивуємо спінер на кнопці\n    this.refs.button.classList.remove('is-hidden'); // прибираэмо hidden, робимо кнопку видимою\n}\n\ndisable() { // стан кнопки на імітацію завантаження даних (задаємо в парі з методами show/hide)\n    this.refs.button.disabled = true; // робимо кнопку неактивною\n    this.refs.label.textContent = 'Loading...'; // підставляємо на кнопку слово Loading...\n    this.refs.spinner.classList.remove('is-hidden'); // активуємо спінер на кнопці\n    this.refs.button.classList.add('is-hidden'); // ставимо hidden, робимо кнопку невидимою\n}\n\nshow() {  // метод показування кнопки Load more \n    this.refs.button.classList.remove('is-hidden'); // знімаємо hidden, робимо кнопку видимою\n}\n\nhide() { // метод приховування кнопки Load more \n    this.refs.button.classList.add('is-hidden'); // ставимо hidden, робимо кнопку невидимою\n    }\n}","import NewsApiService from './js-components/news-service' // імпортуємо окремо винесений метод роботи з методу роботи з API\nimport LoadMoreBtn from './js-components/load-more-btn' // імпортуємо окремо винесену функцію(клас) для приховування кнопки Load more\n\nconst searchForm = document.querySelector('#search-form');     // отримуємо доступ до форми\nconst input = document.querySelector('input[name=\"searchQuery\"]');     // отримуємо доступ до інпуту\nconst hitsContainer = document.querySelector('.gallery');  // отримуємо доступ до поля карток\n// const loadMoreBtn = document.querySelector('.load-more');  // отримуємо доступ до пкнопки дозавантаження\n\nconst loadMoreBtn = new LoadMoreBtn({  // створюємо новий екземпляр класу для обробки методу приховання/показування кнопки Load more, отримуємо доступ до кнопки через селектор в класі LoadMoreBtn\n    selector: '.load-more',  // встановлюэмо доступ до кнопки Load more\n    hidden: true,  // встановлюэмо за замовчуванням кнопку Load more захованою\n}); \n\nconst newsApiService = new NewsApiService(); // створюємо новий об'єкт для обробки методу роботи з API\n\n\nsearchForm.addEventListener('submit', onSearch)  // слухач для форми пошуку\nloadMoreBtn.refs.button.addEventListener('click', onLoadMore)  // слухач для кнопки дозавантаження\n\nlet searchQuery = ''; // оголошуємо глобальну змінну для можливості роботи з нею окремовинисеного методу fetchArticles\n\nfunction onSearch(e) {  // функція першої загрузки результатів пошуку\n    e.preventDefault();   // знімаємо перезавантаження сторінки при роботі з формою\n    newsApiService.query = input.value; // отримуємо в обєкт дані з інпуту\n    if (newsApiService.query === '') {  // виводимо повідомлення в разі сабміту пустого інпуту\n        return alert('Please enter a value to search for results');\n    }\n    \n    loadMoreBtn.disable(); // встановлюємо кнопку в режим Loading... (метод винесений в зовнішній файл)\n    loadMoreBtn.show(); // показуємо кнопку завантаження (метод винесений в зовнішній файл)\n    newsApiService.resetPage(); // додаємо на submit метод скдинання сторінки до 1-ї при новому пошуку (описуємо в класі NewsApiService)\n    console.log(newsApiService.query);\n    newsApiService.fetchHits(searchQuery) // викликаємо єдиний спільний метод роботи з API\n        .then(hits => {\n            clearHitsContainer(); // чистимо контейнер перед завантаженням даними наступного пошуку\n            appendHitsMarkup(hits); // посилаємо для мапінгу в дом значення об'єктів даних\n            loadMoreBtn.enable(); // встановлюємо кнопку в режим Load more (метод винесений в зовнішній файл)\n        });\n}\n\nfunction onLoadMore(e) { // функція наступних догрузок результатів пошуку\n    loadMoreBtn.disable(); // встановлюємо кнопку в режим Loading... (метод винесений в зовнішній файл)\n    loadMoreBtn.show(); // показуємо кнопку завантаження (метод винесений в зовнішній файл)\n    newsApiService.fetchHits(searchQuery)  // викликаємо єдиний спільний метод роботи з API\n        .then(hits => {\n            appendHitsMarkup(hits) // посилаємо для мапінгу в дом значення об'єктів даних\n            loadMoreBtn.enable(); // встановлюємо кнопку в режим Load more (метод винесений в зовнішній файл)\n        }); \n    \n    \n    // newsApiService.fetchHits(searchQuery)  // викликаємо єдиний спільний метод роботи з API\n    //     .then(appendHitsMarkup); // посилаємо для мапінгу в дом значення об'єктів даних\n}\n    \nfunction appendHitsMarkup(hits) { // функція загрузки в контейнер та мапінгу в дом значення об'єктів даних\n    hitsContainer.insertAdjacentHTML('beforeend', hitsTpl(hits)); \n}\n\nfunction clearHitsContainer() { // функція очистки контейнеру перед мапінгом в дом значень іншого пошуку\n    hitsContainer.innerHTML = '';\n}\n\nfunction hitsTpl(hits) { // функцію шаблону мапінгу результатів фетчу в дом\n    const markup = hits.map(hit => { // мапимо дані з API в заготовку html для картки\n        return `<div class=\"photo-card\">\n                <img class=\"img-card\" src=\"${hit.webformatURL}\" alt=\"${hit.tags}\" loading=\"lazy\"/>\n                <div class=\"info\">\n                  <p class=\"info-item\">\n                  <b>Likes</b> ${hit.likes}\n                  </p>\n                  <p class=\"info-item\">\n                  <b>Views</b> ${hit.views}\n                  </p>\n                  <p class=\"info-item\">\n                  <b>Comments</b> ${hit.comments}\n                  </p>\n                  <p class=\"info-item\">\n                  <b>Downloads</b> ${hit.downloads}\n                  </p>\n              </div>\n            </div>`;\n    })\n    .join(''); // об'єднуємо всі елементи масиву в строку та розділяємо 'пробілом' (прибираємо коми за замовчуванням)\n    hitsContainer.innerHTML = markup; // прописуємо новий html картки в домі\n}"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$859f6dc3d3c25fbc$export$2e2bcd8739ae039","NewsApiService","this","searchQuery","page","console","log","url","concat","fetch","then","respense","json","param","hits","_this","incrementPage","newQuery","$da5ec776fb2d70d2$export$2e2bcd8739ae039","LoadMoreBtn","selector","_hidden","hidden","refs","getRefs","hide","button","document","querySelector","label","spinner","disabled","textContent","classList","add","remove","$b8f9b7833fa37166$var$searchForm","$b8f9b7833fa37166$var$input","$b8f9b7833fa37166$var$hitsContainer","$b8f9b7833fa37166$var$loadMoreBtn","$b8f9b7833fa37166$var$newsApiService","addEventListener","e","preventDefault","query","alert","disable","show","resetPage","fetchHits","innerHTML","$b8f9b7833fa37166$var$appendHitsMarkup","enable","insertAdjacentHTML","markup","map","hit","webformatURL","tags","likes","views","comments","downloads","join","$b8f9b7833fa37166$var$hitsTpl"],"version":3,"file":"index.e6353897.js.map"}