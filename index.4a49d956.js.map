{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECRI,IAAAgB,ECAb,W,sBDAmBC,I,aAGbC,KAAKC,YAAc,GACsDD,KAApEE,KAAO,C,iBAGmCT,IAAnD,Y,MAAA,SAAUQ,G,WACNE,QAAQC,IAAIJ,MACZ,IAAMK,EAAM,qEAA8JC,OAAzFN,KAAKC,YAAY,0EAAkFK,OAAVN,KAAKE,KAAK,gBAExL,OAAOK,MAAMF,GACmBG,MAAtB,SAAAC,G,OAAKA,EAAEC,M,IACeF,MAAtB,SAAAG,GAGF,OAFAC,EAAKC,gBACuDV,QAApDC,IAAIO,GACLA,EAAKG,I,OAIxBrB,IAAA,gB,MAAA,WACIO,KAAKE,MAAQ,C,IAGjBT,IAAA,Y,MAAA,WACIO,KAAKE,KAAO,C,IAGZT,IAAA,Q,IAAJ,WACI,OAAOO,KAAKC,W,MAEhB,SAAUc,GACNf,KAAKC,YAAcc,C,OChCrB,GCEIC,EAAaC,SAASC,cAAc,gBACpCC,EAAQF,SAASC,cAAc,6BAC/BE,EAAgBH,SAASC,cAAc,YACvCG,EAAcJ,SAASC,cAAc,cAErCI,EAAiB,IAAIxB,EAEekB,EAA/BO,iBAAiB,UAK0C,SAApDC,GAGY,GAF1BA,EAAEC,iBAC8CH,EAAjCI,MAAQP,EAAMxC,MACA,KAAzB2C,EAAeI,MACf,OAAOC,MAAM,8CAEjBL,EAAeM,YACgDzB,QAAvDC,IAAIkB,EAAeI,OAC3BJ,EAAeO,UAVD,IAW2BrB,MAA/B,SAAAM,GAgBVM,EAAcU,UAAY,GAdsCC,EAAvCjB,E,OAfTO,EAARE,iBAAiB,SAmB7B,SAAoBC,GAChBF,EAAeO,UAlBD,IAmB2BrB,KAA/BuB,E,IAGd,SAASA,EAAiBjB,GACtBM,EAAcY,mBAAmB,YAOrC,SAAiBlB,GACb,IAAMmB,EAASnB,EAAKoB,KAAI,SAAAC,GACpB,MAAO,wEACwD7B,OAA1B6B,EAAIC,aAAa,WAG7B9B,OAHsC6B,EAAIE,KAAK,oIAM/C/B,OAHA6B,EAAIG,MAAM,sGAMPhC,OAHH6B,EAAII,MAAM,yGAMNjC,OAHD6B,EAAIK,SAAS,0GAGElC,OAAd6B,EAAIM,UAAU,qE,IAK9CC,KAAK,IAC4EtB,EAApEU,UAAYG,C,CA5BoBU,CAAQ7B,G","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js-components/news-service.js","<<jsx-config-pragma.js>>","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","export default class NewsApiService { // створюємо окремий класс для роботи з АРІ\n\n    constructor() {\n        this.searchQuery = ''; // оголошуємо глобальну змінну в конструкторі для подальшого перезапису через метод get та set\n        this.page = 1; // вводимо параметер номера сторінки для можливості догрузки \n        \n    }\n    fetchHits(searchQuery) {  // формуємо єдиний метод який буде відповідати за HTTP запити\n        console.log(this);\n        const url = `https://pixabay.com/api/?key=32070440-da23fcdb10bb13069c595106c&q=${this.searchQuery}&image_type=photo&lang=en&orientation=horizontal&safesearch=true&page=${this.page}&per_page=40`\n    \n    return fetch(url)  //забираємо проміс даних по лінку API\n        .then(r => r.json()) //парсимо дані в текстовий формат json\n        .then(data => {    \n            this.incrementPage(); // догружаємо сторінки з даними при кожному кліку на load more(метод описаний нижче)\n            console.log(data)\n            return data.hits; // повертаємо у зовнішній код проміс значення об'єкту даних\n        })     \n    } \n\nincrementPage() { // прописуємо метод збільшення номеру сторінки до наступної при кліку на load more\n    this.page += 1;\n}\n\nresetPage() { // прописуємо метод скидання номеру сторінки до 1-ї при новому пошуку\n    this.page = 1;\n}\n\nget query() { //  прописуємо в конструктор медот для отримання змінної \n    return this.searchQuery;\n    }\nset query(newQuery) { //  прописуємо в конструктор медот для перезапису змінної \n    this.searchQuery = newQuery;    \n}\n}\n\n",null,"import NewsApiService from './js-components/news-service' // імпортуємо окремо винесений метод роботи з методу роботи з API\n\nconst searchForm = document.querySelector('#search-form');     // отримуємо доступ до форми\nconst input = document.querySelector('input[name=\"searchQuery\"]');     // отримуємо доступ до інпуту\nconst hitsContainer = document.querySelector('.gallery');  // отримуємо доступ до поля карток\nconst loadMoreBtn = document.querySelector('.load-more');  // отримуємо доступ до пкнопки дозавантаження\n\nconst newsApiService = new NewsApiService(); // створюємо новий об'єкт для обробки методу роботи з API\n\nsearchForm.addEventListener('submit', onSearch)  // слухач для форми пошуку\nloadMoreBtn.addEventListener('click', onLoadMore)  // слухач для кнопки дозавантаження\n\nlet searchQuery = ''; // оголошуємо глобальну змінну для можливості роботи з нею окремовинисеного методу fetchArticles\n\nfunction onSearch(e) {  // функція першої загрузки результатів пошуку\n    e.preventDefault();   // знімаємо перезавантаження сторінки при роботі з формою\n    newsApiService.query = input.value; // отримуємо в обєкт дані з інпуту\n    if (newsApiService.query === '') {  // виводимо повідомлення в разі сабміту пустого інпуту\n        return alert('Please enter a value to search for results');\n    }\n    newsApiService.resetPage(); // додаємо на submit метод скдинання сторінки до 1-ї при новому пошуку (описуємо в класі NewsApiService)\n    console.log(newsApiService.query);\n    newsApiService.fetchHits(searchQuery) // викликаємо єдиний спільний метод роботи з API\n        .then(hits => {\n            clearHitsContainer(); // чистимо контейнер перед завантаженням даними наступного пошуку\n            appendHitsMarkup(hits); // посилаємо для мапінгу в дом значення об'єктів даних\n        });\n}\n\nfunction onLoadMore(e) { // функція наступних догрузок результатів пошуку\n    newsApiService.fetchHits(searchQuery)  // викликаємо єдиний спільний метод роботи з API\n        .then(appendHitsMarkup); // посилаємо для мапінгу в дом значення об'єктів даних\n}\n    \nfunction appendHitsMarkup(hits) { // функція загрузки в контейнер та мапінгу в дом значення об'єктів даних\n    hitsContainer.insertAdjacentHTML('beforeend', hitsTpl(hits)); \n}\n\nfunction clearHitsContainer() { // функція очистки контейнеру перед мапінгом в дом значень іншого пошуку\n    hitsContainer.innerHTML = '';\n}\n\nfunction hitsTpl(hits) { // функцію шаблону мапінгу результатів фетчу в дом\n    const markup = hits.map(hit => { // мапимо дані з API в заготовку html для картки\n        return `<div class=\"photo-card\">\n                <img class=\"img-card\" src=\"${hit.webformatURL}\" alt=\"${hit.tags}\" loading=\"lazy\"/>\n                <div class=\"info\">\n                  <p class=\"info-item\">\n                  <b>Likes</b> ${hit.likes}\n                  </p>\n                  <p class=\"info-item\">\n                  <b>Views</b> ${hit.views}\n                  </p>\n                  <p class=\"info-item\">\n                  <b>Comments</b> ${hit.comments}\n                  </p>\n                  <p class=\"info-item\">\n                  <b>Downloads</b> ${hit.downloads}\n                  </p>\n              </div>\n            </div>`;\n    })\n    .join(''); // об'єднуємо всі елементи масиву в строку та розділяємо 'пробілом' (прибираємо коми за замовчуванням)\n    hitsContainer.innerHTML = markup; // прописуємо новий html картки в домі\n}"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$859f6dc3d3c25fbc$export$2e2bcd8739ae039","NewsApiService","this","searchQuery","page","console","log","url","concat","fetch","then","r","json","data","_this","incrementPage","hits","newQuery","$b8f9b7833fa37166$var$searchForm","document","querySelector","$b8f9b7833fa37166$var$input","$b8f9b7833fa37166$var$hitsContainer","$b8f9b7833fa37166$var$loadMoreBtn","$b8f9b7833fa37166$var$newsApiService","addEventListener","e","preventDefault","query","alert","resetPage","fetchHits","innerHTML","$b8f9b7833fa37166$var$appendHitsMarkup","insertAdjacentHTML","markup","map","hit","webformatURL","tags","likes","views","comments","downloads","join","$b8f9b7833fa37166$var$hitsTpl"],"version":3,"file":"index.4a49d956.js.map"}